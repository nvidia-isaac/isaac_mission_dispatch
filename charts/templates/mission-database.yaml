# SPDX-FileCopyrightText: NVIDIA CORPORATION & AFFILIATES
# Copyright (c) 2021-2023 NVIDIA CORPORATION & AFFILIATES. All rights reserved.

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     https://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# SPDX-License-Identifier: Apache-2.0

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mission-dispatch-database
  namespace: {{ .Values.namespace.name }}
  labels:
    app: mission-dispatch-database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mission-dispatch-database
  template:
    metadata:
      labels:
        app: mission-dispatch-database
    spec:
      imagePullSecrets:
      - name: {{ .Values.images.nvcrSecret }}
      containers:
      - name: mission-dispatch-database
        image: {{ .Values.images.missionDatabase }}
        command: ["sh"]
        args:
        - -c
        - |
           /app/packages/database/postgres-img.binary --root_path {{ .Values.missionUrl }} \
           --address 0.0.0.0 --port 5000 --controller_port 5001 --db_host {{ .Values.dbHostName }} \
           --db_port {{ .Values.dbPort }} --db_username $DB_USERNAME --db_password $DB_PASSWORD
        imagePullPolicy: Always
        env:
        - name: "DB_USERNAME"
          valueFrom:
            secretKeyRef:
              key: db_username
              name: postgres-secret
        - name: "DB_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: db_password
              name: postgres-secret
        ports:
        - name: http
          containerPort: 5000
          protocol: TCP
        - name: http-internal
          containerPort: 5001
          protocol: TCP

---

apiVersion: v1
kind: Service
metadata:
  name: mission-dispatch-database
  namespace: {{ .Values.namespace.name }}
  labels:
    app: mission-dispatch-database
spec:
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: mission-dispatch-database

---

apiVersion: v1
kind: Service
metadata:
  name: mission-dispatch-database-internal
  namespace: {{ .Values.namespace.name }}
  labels:
    app: mission-dispatch-database
spec:
  ports:
    - port: 80
      targetPort: http-internal
      protocol: TCP
      name: http
  selector:
    app: mission-dispatch-database

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mission-dispatch-database
  namespace: {{ .Values.namespace.name }}
  {{- with .Values.ingressAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  rules:
  - host: {{ .Values.hostDomainName }}
    http:
      paths:
      - path: {{ .Values.missionUrl }}(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: mission-dispatch-database
            port:
              number: 80
